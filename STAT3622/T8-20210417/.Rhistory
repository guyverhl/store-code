options(htmltools.dir.version = FALSE)
library(tidyverse)
# Parsing of HTML/XML files
library(rvest)
library(XML)
url <-'https://brandirectory.com/rankings/global/2021/table'
webpage <- read_html(url)
doc <- getURL(url)
library(RCurl)
doc <- getURL(url)
doc
webpage
url = "https://finance.yahoo.com/quote/%5EGSPC/history?p=%5EGSPC"
webpage <- read_html(url)
options(htmltools.dir.version = FALSE)
# General-purpose data wrangling
library(tidyverse)
# Parsing of HTML/XML files
library(rvest)
library(XML)
options(htmltools.dir.version = FALSE)
options(warn=-1)
# General-purpose data wrangling
suppressMessages(library(tidyverse))
# Parsing of HTML/XML files
suppressMessages(library(rvest))
suppressMessages(library(XML))
library(RCurl)
url = "https://finance.yahoo.com/quote/%5EGSPC/history?p=%5EGSPC"
doc <- getURL(url)
doc <- htmlParse(doc,useInternal=TRUE, encoding="UTF-8")
path_root = '//*[@id="Col1-1-HistoricalDataTable-Proxy"]
/section/div[2]/table/tbody/tr'
Date = xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[1]/span', sep =""))
Open = as.numeric(gsub(",","", xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[2]/span', sep =""))))
High = as.numeric(gsub(",","", xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[3]/span', sep =""))))
Low = as.numeric(gsub(",","", xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[4]/span', sep =""))))
Close = as.numeric(gsub(",","", xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[5]/span', sep =""))))
Adj_Close = as.numeric(gsub(",","", xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[6]/span', sep =""))))
Volume = as.numeric(gsub(",","", xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[7]/span', sep =""))))
SP500 = data.frame(Date, Open, High, Low, Close, Adj_Close, Volume)
SP500
xpathSApply(doc, fun = xmlValue,
path = paste(path_root, '/td[2]/span', sep =""))
paste(path_root, '/td[2]/span', sep ="")
doc
?getURL
?htmlParse
?read_html
webpage
doc %>% html_nodes("tbody tr")
?xpathSApply
xpathApply(doc, fun = xmlValue,
path = paste(path_root, '/td[2]/span', sep =""))
