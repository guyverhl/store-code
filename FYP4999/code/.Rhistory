freqs <- t(matrix(c(atSeq[-c(1,2,3,4)])) )
View(freqs)
freqs <- matrix(c(atSeq[-c(1,2,3,4)]))
View(freqs)
res <- sequential(freqs, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE)
atSeq[-c(1,2,3,4)]
freqs <- t(matrix(c(atSeq[-c(1,2,3,4)])) )
res <- sequential(freqs, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE)
data_BQ2011 <- t(matrix(c(
2,1,4,3,3,4,3,4,2,1,4,4,5,4,1,3,4,5,3,2,2,1,4,1,2,
5,2,1,2,3,3,1,4,4,1,4,1,3,3,3,1,5,2,1,1,3,1,4,1,2,
3,3,4,5,5,2,3,3,5,2,5,4,4,2,3,1,5,5,2,2,1,3,3,3,3 )) )
View(data_BQ2011)
View(data_BQ2011)
hvANoTseq <- createSeq(hvAudioNoTextDf)
baseSeq <- createSeq(baselineDf)
noAHvTseq <- createSeq(noAudioHvTextDf)
atSeq <- createSeq(audioTextDf)
dat <- atSeq[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat3 <- data.matrix(dat2)
res <- sequential(dat3, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE)
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat3 <- data.matrix(dat2)
res <- sequential(dat3, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE)
hvANoTexpFreq <- expFreq(hvANoTseq)
expFreq <- function(x) {
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat3 <- data.matrix(dat2)
res <- sequential(dat3, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE)
return(res$expfreqs)
}
hvANoTexpFreq <- expFreq(hvANoTseq)
View(hvANoTexpFreq)
View(t1)
audioExpFreq <- expFreq(hvANoTseq)
baseExpFreq <- expFreq(baseSeq)
textExpFreq <- expFreq(noAHvTseq)
atExpFreq <- expFreq(atSeq)
View(atExpFreq)
expFreq <- function(x) {
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat3 <- data.matrix(dat2)
res <- sequential(dat3, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE, tailed=1)
return(res$expfreqs)
}
audioExpFreq <- expFreq(hvANoTseq)
baseExpFreq <- expFreq(baseSeq)
textExpFreq <- expFreq(noAHvTseq)
atExpFreq <- expFreq(atSeq)
expFreq <- function(x) {
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat3 <- data.matrix(dat2)
res <- sequential(dat3, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE)
return(res$expfreqs)
}
audioExpFreq <- expFreq(hvANoTseq)
baseExpFreq <- expFreq(baseSeq)
textExpFreq <- expFreq(noAHvTseq)
atExpFreq <- expFreq(atSeq)
library(TraMineR)
library(tidyverse)
library(igraph)
library(markovchain)
library(LagSequential)
setwd("~/Documents/HKU/FYP4999/code")
df <- read_csv("rawT.csv")
seq = select(df,c("Participant","heritage","Text on-off", "Audio on-off", "ROI"))
textDf <- seq[(seq['Audio on-off']=='Off' & seq['Text on-off']=='On'),]
audioDf <- seq[(seq['Audio on-off']=='On' & seq['Text on-off']=='Off'),]
baselineDf <- seq[(seq['Audio on-off']=='Off' & seq['Text on-off']=='Off'),]
audioTextDf <- seq[(seq['Audio on-off']=='On' & seq['Text on-off']=='On'),]
combineRow <- function(x) {
comBdf <- cbind(x[1:(nrow(x)-1),5], x[2:nrow(x),5])
comBdf$sequence <- paste0(comBdf[,1],'->',comBdf[,2] )
list_df <- list(x, comBdf['sequence'])
n_r <- seq_len(max(sapply(list_df, nrow)))
result <- do.call(cbind, lapply(list_df, `[`, n_r, ))
colnames(result)[6] <- "sequence"
result$sequence <- c(NA, head(result['sequence'], dim(result)[1] - 1)[[1]])
for (row in 2:nrow(result)){
if((result$Participant[row] != result$Participant[row-1]) ||
(result$heritage[row] != result$heritage[row-1])) {
result$sequence[row] = NA
}
}
return(result)
}
textDfw2 <- combineRow(textDf)
audioDfw2 <- combineRow(audioDf)
baselineDfw2 <- combineRow(baselineDf)
audioTextDfw2 <- combineRow(audioTextDf)
View(audioDfw2)
seqW2 <- rbind(textDfw2, audioDfw2,
baselineDfw2, audioTextDfw2)
seqW2 <- seqW2 %>%
mutate(condition = if_else((seqW2['Audio on-off']=='Off' & seqW2['Text on-off']=='On'), "text",
if_else((seqW2['Audio on-off']=='On' & seqW2['Text on-off']=='Off'), "audio",
if_else((seqW2['Audio on-off']=='Off' & seqW2['Text on-off']=='Off'),"baseline", "text+audio")))) %>%
mutate(start_grp = if_else(grepl("Culturual  Heritage->", sequence, fixed=TRUE) == TRUE, "Culturual  Heritage->",
if_else(grepl("Text->", sequence, fixed=TRUE) == TRUE, "Text->",
if_else(grepl("Others->", sequence, fixed=TRUE) == TRUE, "Others->",
if_else(grepl("Nature->", sequence, fixed=TRUE) == TRUE, "Nature->",
if_else(grepl("Urban->", sequence, fixed=TRUE) == TRUE, "Urban->", "Tamed nature->")))))) %>%
relocate(condition) %>% na.omit(seqW2)
t0 <- summarize(group_by(seqW2, condition, start_grp),
total_event_sequence=n())
t1 <- summarize(group_by(seqW2, start_grp, condition, sequence),
observed_frequency=n())
t1 <- merge(x=t1,y=t0,by=c("condition", "start_grp"),all.x=TRUE) %>%
relocate(total_event_sequence, .after = sequence)
t1$observed_probability <- t1$observed_frequency/t1$total_event_sequence
createSeq <- function(x) {
x <- x %>%
group_by(Participant, heritage,`Text on-off`, `Audio on-off`) %>%
mutate(counter = row_number()) %>%
ungroup() %>%
mutate(counter) %>%
spread(counter, ROI)
return(x)
}
audioSeq <- createSeq(audioDf)
baseSeq <- createSeq(baselineDf)
textSeq <- createSeq(textDf)
atSeq <- createSeq(audioTextDf)
expFreq <- function(x) {
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat3 <- data.matrix(dat2)
res <- sequential(dat3, labels=c("Culturual Heritage","Others",
"Tamed nature","Text","Urban","Nature"),
adjacent = TRUE)
return(res$expfreqs)
}
audioExpFreq <- expFreq(audioSeq)
baseExpFreq <- expFreq(baseSeq)
textExpFreq <- expFreq(textSeq)
atExpFreq <- expFreq(atSeq)
View(t1)
View(audioSeq)
View(audioExpFreq)
audioExpFreq <- expFreq(audioSeq)
expFreq <- function(x) {
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat3 <- data.matrix(dat2)
tempList <- ifelse((x == "audioSeq" || x == "baseSeq"),
c("Culturual Heritage","Others", "Tamed nature","Urban","Nature"),
c("Culturual Heritage","Others", "Tamed nature","Text","Urban","Nature"))
res <- sequential(dat3, labels=tempList, adjacent = TRUE)
return(res$expfreqs)
}
audioExpFreq <- expFreq(audioSeq)
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat2 <- dat2%>%mutate_if(is.character, as.factor)
dat3 <- data.matrix(dat2)
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
expFreq <- function(x) {
dat <- x[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat2 <- dat2%>%mutate_if(is.character, as.factor)
dat3 <- data.matrix(dat2)
tempList <- ifelse((x == "audioSeq" || x == "baseSeq"),
c("Culturual Heritage","Others", "Tamed nature","Urban","Nature"),
c("Culturual Heritage","Others", "Tamed nature","Text","Urban","Nature"))
res <- sequential(dat3, labels=tempList, adjacent = TRUE)
return(res$expfreqs)
}
audioExpFreq <- expFreq(audioSeq)
dat <- audioSeq[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat2 <- dat2%>%mutate_if(is.character, as.factor)
str(dat2)
dat <- audioSeq[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
str(dat)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
str(dat2)
View(audioSeq)
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat2 <- dat2%>%mutate_if(is.character, as.factor)
str(dat2)
dat2 <- dat2%>%mutate_if(is.numeric(), as.factor)
dat2 <- dat2%>%mutate_if(is.numeric, as.factor)
str(dat2)
View(dat2)
dat <- audioSeq[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
View(dat)
dat[is.na(dat)] <- 0
dat[is.na(dat)] <- "0"
dat[is.na(dat)] <- 0
dat <- audioSeq[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2[is.na(dat2)] <- 0
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat2 <- dat2%>%mutate_if(is.numeric, as.factor)
lev <- as.character(unique(unlist(sapply(dat2, levels))))
tmp <- unlist(dat2)
dat3 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
str(dat3)
dat4 <- data.matrix(dat3)
View(dat4)
res <- sequential(dat4, labels=tempList, adjacent = TRUE)
res <- sequential(dat4, labels=c("Culturual Heritage","Others", "Tamed nature","Text","Urban","Nature"), adjacent = TRUE)
res <- sequential(dat4, labels=c("Culturual Heritage","Others", "Tamed nature","Urban","Nature"), adjacent = TRUE)
dat <- audioSeq[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
View(dat2)
dat2 <- na.omit(dat2)
dat <- audioSeq[-c(1,2,3,4)]%>%mutate_if(is.character, as.factor)
lev <- as.character(unique(unlist(sapply(dat, levels))))
tmp <- unlist(dat)
dat2 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat2 <- dat2%>%mutate_if(is.factor, as.numeric)
dat2[is.na(dat2)] <- 0
dat2 <- dat2%>%mutate_if(is.numeric, as.factor)
lev <- as.character(unique(unlist(sapply(dat2, levels))))
tmp <- unlist(dat2)
dat3 <- data.frame(lapply(data.frame(matrix(tmp, ncol = ncol(dat)),
stringsAsFactors = FALSE),
FUN = factor, levels = lev))
dat4 <- data.matrix(dat3)
res <- sequential(dat4, labels=c("Culturual Heritage","Others", "Tamed nature","Urban","Nature"), adjacent = TRUE)
View(dat4)
View(t0)
seqW2 <- rbind(textDfw2, audioDfw2,
baselineDfw2, audioTextDfw2)
seqW2 <- seqW2 %>%
mutate(condition = if_else((seqW2['Audio on-off']=='Off' & seqW2['Text on-off']=='On'), "text",
if_else((seqW2['Audio on-off']=='On' & seqW2['Text on-off']=='Off'), "audio",
if_else((seqW2['Audio on-off']=='Off' & seqW2['Text on-off']=='Off'),"baseline", "text+audio")))) %>%
mutate(start_grp = if_else(grepl("Culturual  Heritage->", sequence, fixed=TRUE) == TRUE, "Culturual  Heritage->",
if_else(grepl("Text->", sequence, fixed=TRUE) == TRUE, "Text->",
if_else(grepl("Others->", sequence, fixed=TRUE) == TRUE, "Others->",
if_else(grepl("Nature->", sequence, fixed=TRUE) == TRUE, "Nature->",
if_else(grepl("Urban->", sequence, fixed=TRUE) == TRUE, "Urban->", "Tamed nature->")))))) %>%
mutate(end_grp = if_else(grepl("->Culturual  Heritage", sequence, fixed=TRUE) == TRUE, "->Culturual  Heritage",
if_else(grepl("->Text", sequence, fixed=TRUE) == TRUE, "->Text",
if_else(grepl("->Others", sequence, fixed=TRUE) == TRUE, "->Others",
if_else(grepl("->Nature", sequence, fixed=TRUE) == TRUE, "->Nature",
if_else(grepl("->Urban", sequence, fixed=TRUE) == TRUE, "->Urban", "->Tamed nature")))))) %>%
relocate(condition) %>% na.omit(seqW2)
View(seqW2)
t0_start <- summarize(group_by(seqW2, condition, start_grp),
total_event_sequence=n())
t0_end <- summarize(group_by(seqW2, condition, end_grp),
total_event_sequence=n())
View(t0_end)
View(t0_start)
t0_start <- summarize(group_by(seqW2, condition, start_grp),
total_start_event_sequence=n())
t0_end <- summarize(group_by(seqW2, condition, end_grp),
total_end_event_sequence=n())
t1 <- merge(x=t1,y=t0,by=c("condition", "start_grp", "end_grp"),all.x=TRUE) %>%
relocate(total_event_sequence, .after = sequence)
t1 <- merge(x=t1,y=t0_start,z=t0_end,by=c("condition", "start_grp", "end_grp"),all.x=TRUE) %>%
relocate(total_event_sequence, .after = sequence)
t1 <- merge(x=t1,y=t0_start,by=c("condition", "start_grp"),all.x=TRUE) %>%
merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE)
View(t0_end)
View(t0_end)
t1 <- merge(x=t1,y=t0_start,by=c("condition", "start_grp"),all.x=TRUE)
View(t1)
t1 <- summarize(group_by(seqW2, start_grp, condition, sequence),
observed_frequency=n())
View(seqW2)
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
View(t1)
t1 <- merge(x=t1,y=t0_start,by=c("condition", "start_grp"),all.x=TRUE) %>%
merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE)
View(t1)
t1 <- merge(x=t1,y=t0_start,by=c("condition", "start_grp"),all.x=TRUE) %>%
merge(t0_end)
View(t1)
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_start)
View(t1)
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
View(t1)
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_start)
View(t1)
View(t1)
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_start) %>%
relocate(total_start_event_sequence, .after = sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_start) %>%
relocate(total_start_event_sequence, .after = sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
View(t1)
t0_tot <- summarize(group_by(seqW2, condition),
total_event_sequence=n())
View(t0_tot)
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_start) %>% merge(t0_tot) %>%
relocate(total_start_event_sequence, .after = sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
View(t1)
t1 <- merge(x=t1,y=t0_tot,by=c("condition"),all.x=TRUE) %>%
merge(t0_start) %>% merge(t0_end) %>%
relocate(total_start_event_sequence, .after = sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
t1 <- merge(x=t1,y=t0_tot,by=c("condition"),all.x=TRUE) %>%
merge(t0_start) %>% merge(t0_end) %>%
relocate(total_start_event_sequence, .after = sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
View(t1)
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_tot) %>% merge(t0_start) %>%
relocate(total_start_event_sequence, .after = sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
View(t1)
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_tot) %>% merge(t0_start) %>%
relocate(total_event_sequence, .after = sequence) %>%
relocate(total_start_event_sequence, .after = total_event_sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
View(t1)
t1$observed_probability <- t1$observed_frequency/t1$total_event_sequence
t1$observed_probability <- t1$observed_frequency/t1$total_start_event_sequence
t1$expected_frequency <- t1$total_start_event_sequence*t1$total_end_event_sequence/t1$total_event_sequence
t1$expected_probability <- t1$expected_frequency/t1$total_start_event_sequence
View(seqW2)
t1$expected_frequency <-
t1$total_start_event_sequence*t1$total_end_event_sequence/t1$total_event_sequence
t1$z_score <- (t1$observed_frequency-t1$expected_frequency)/sqrt(
t1$total_start_event_sequence*t1$expected_probability*(1-t1$expected_probability)
)
t1$z_score <- (t1$observed_frequency-t1$expected_frequency)/sqrt(
t1$total_event_sequence*t1$expected_probability*(1-t1$expected_probability)
)
t1$z_score <- (t1$observed_frequency-t1$expected_frequency)/sqrt(
t1$total_start_event_sequence*t1$expected_probability*(1-t1$expected_probability)
)
View(audioExpFreq)
View(t0_end)
library(TraMineR)
library(tidyverse)
library(igraph)
library(markovchain)
library(LagSequential)
setwd("~/Documents/HKU/FYP4999/code")
df <- read_csv("rawT.csv")
seq = select(df,c("Participant","heritage","Text on-off", "Audio on-off", "ROI"))
textDf <- seq[(seq['Audio on-off']=='Off' & seq['Text on-off']=='On'),]
audioDf <- seq[(seq['Audio on-off']=='On' & seq['Text on-off']=='Off'),]
baselineDf <- seq[(seq['Audio on-off']=='Off' & seq['Text on-off']=='Off'),]
audioTextDf <- seq[(seq['Audio on-off']=='On' & seq['Text on-off']=='On'),]
combineRow <- function(x) {
comBdf <- cbind(x[1:(nrow(x)-1),5], x[2:nrow(x),5])
comBdf$sequence <- paste0(comBdf[,1],'->',comBdf[,2] )
list_df <- list(x, comBdf['sequence'])
n_r <- seq_len(max(sapply(list_df, nrow)))
result <- do.call(cbind, lapply(list_df, `[`, n_r, ))
colnames(result)[6] <- "sequence"
result$sequence <- c(NA, head(result['sequence'], dim(result)[1] - 1)[[1]])
for (row in 2:nrow(result)){
if((result$Participant[row] != result$Participant[row-1]) ||
(result$heritage[row] != result$heritage[row-1])) {
result$sequence[row] = NA
}
}
return(result)
}
textDfw2 <- combineRow(textDf)
audioDfw2 <- combineRow(audioDf)
baselineDfw2 <- combineRow(baselineDf)
audioTextDfw2 <- combineRow(audioTextDf)
# Combine 4 conditions tgt
seqW2 <- rbind(textDfw2, audioDfw2, baselineDfw2, audioTextDfw2)
# Create condition, start_grp, end_grp columns
seqW2 <- seqW2 %>%
mutate(condition = if_else((seqW2['Audio on-off']=='Off' & seqW2['Text on-off']=='On'), "text",
if_else((seqW2['Audio on-off']=='On' & seqW2['Text on-off']=='Off'), "audio",
if_else((seqW2['Audio on-off']=='Off' & seqW2['Text on-off']=='Off'),"baseline", "text+audio")))) %>%
mutate(start_grp = if_else(grepl("Culturual  Heritage->", sequence, fixed=TRUE) == TRUE, "Culturual  Heritage->",
if_else(grepl("Text->", sequence, fixed=TRUE) == TRUE, "Text->",
if_else(grepl("Others->", sequence, fixed=TRUE) == TRUE, "Others->",
if_else(grepl("Nature->", sequence, fixed=TRUE) == TRUE, "Nature->",
if_else(grepl("Urban->", sequence, fixed=TRUE) == TRUE, "Urban->", "Tamed nature->")))))) %>%
mutate(end_grp = if_else(grepl("->Culturual  Heritage", sequence, fixed=TRUE) == TRUE, "->Culturual  Heritage",
if_else(grepl("->Text", sequence, fixed=TRUE) == TRUE, "->Text",
if_else(grepl("->Others", sequence, fixed=TRUE) == TRUE, "->Others",
if_else(grepl("->Nature", sequence, fixed=TRUE) == TRUE, "->Nature",
if_else(grepl("->Urban", sequence, fixed=TRUE) == TRUE, "->Urban", "->Tamed nature")))))) %>%
relocate(condition) %>% na.omit(seqW2)
# cal total of events under each conditions
t0_tot <- summarize(group_by(seqW2, condition),
total_event_sequence=n())
t0_start <- summarize(group_by(seqW2, condition, start_grp),
total_start_event_sequence=n())
t0_end <- summarize(group_by(seqW2, condition, end_grp),
total_end_event_sequence=n())
# Generate table 1
t1 <- summarize(group_by(seqW2, start_grp, end_grp, condition, sequence),
observed_frequency=n())
t1 <- merge(x=t1,y=t0_end,by=c("condition", "end_grp"),all.x=TRUE) %>%
merge(t0_tot) %>% merge(t0_start) %>%
relocate(total_event_sequence, .after = sequence) %>%
relocate(total_start_event_sequence, .after = total_event_sequence) %>%
relocate(total_end_event_sequence, .after = total_start_event_sequence)
t1$observed_probability <- t1$observed_frequency/t1$total_start_event_sequence
t1$expected_frequency <-
t1$total_start_event_sequence*t1$total_end_event_sequence/t1$total_event_sequence
t1$expected_probability <- t1$expected_frequency/t1$total_start_event_sequence
t1$z_score <- (t1$observed_frequency-t1$expected_frequency)/sqrt(
t1$total_start_event_sequence*t1$expected_probability*(1-t1$expected_probability)
)
View(t1)
